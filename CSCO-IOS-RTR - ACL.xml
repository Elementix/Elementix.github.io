<?xml version="1.0" encoding="utf-16"?>
<PolicyReport xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <ID>c6f59c68-fa5d-45a6-a4b0-7eba878e4b45</ID>
  <Name>CSCO-IOS-RTR - ACL</Name>
  <Comments>Cisco IOS Router RTR Security Technical Implementation Guide: Version: 1: Release: 2: 24 JAN 2020</Comments>
  <Group>Cisco-IOS-RTR-V1R1</Group>
  <ShowSummaryFlag>false</ShowSummaryFlag>
  <ShowRulesWithoutViolationFlag>true</ShowRulesWithoutViolationFlag>
  <AssignedPolicies>
    <Policy>
      <NodeSelectionString>WebCriteria:&lt;?xml version="1.0" encoding="utf-16"?&gt;
&lt;ArrayOfWebSelectionCriteria xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"&gt;
  &lt;WebSelectionCriteria&gt;
    &lt;Id&gt;95aab5fd-da77-4d6c-b5ef-ccc821734928&lt;/Id&gt;
    &lt;LogicalCondition /&gt;
    &lt;SelectedColumn&gt;Vendor&lt;/SelectedColumn&gt;
    &lt;MatchType&gt;=&lt;/MatchType&gt;
    &lt;SelectedValue&gt;Cisco&lt;/SelectedValue&gt;
  &lt;/WebSelectionCriteria&gt;
&lt;/ArrayOfWebSelectionCriteria&gt;SQL:Where (Vendor = 'Cisco') </NodeSelectionString>
      <ConfigTypes>Running</ConfigTypes>
      <AssignedPolicyRules>
        <PolicyRule>
          <MultiLineRulePatterns>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition />
              <Pattern>deny ip any any log-input</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
          </MultiLineRulePatterns>
          <RuleId>a3ee9d4e-c296-416f-84db-185d585b6035</RuleId>
          <RuleName>CSCO-IOS-RTR-CISC-RT-000240 - ACL</RuleName>
          <Comments>The Cisco perimeter router must be configured to deny network traffic by default and allow network traffic by exception</Comments>
          <Grouping>CSCO-IOS-RTR</Grouping>
          <RemediateScript>Check Content:  
This requirement is not applicable for the DODIN Backbone.

Review the router configuration to verify that the inbound ACL applied to all external interfaces is configured to allow specific ports and protocols and deny all other traffic.

Step 1: Verify that an inbound ACL is applied to all external interfaces as shown in the example below.

interface GigabitEthernet0/2
 ip address x.11.1.2 255.255.255.254
 ip access-group EXTERNAL_ACL in

Step 2: Review inbound ACL to verify that it is configured to deny all other traffic that is not explicitly allowed.

ip access-list extended EXTERNAL_ACL
 permit tcp any any established
 permit tcp host x.11.1.1 eq bgp host x.11.1.2
 permit tcp host x.11.1.1 host x.11.1.2 eq bgp
 permit icmp host x.11.1.1 host x.11.1.2 echo
 permit icmp host x.11.1.1 host x.11.1.2 echo-reply
…
 …
 …
deny ip any any log-input

If the ACL is not configured to allow specific ports and protocols and deny all other traffic, this is a finding. If the ACL is not configured inbound on all external interfaces, this is a finding.

Fix Text: This requirement is not applicable for the DODIN Backbone.

Step 1: Configure an inbound ACL to deny all other traffic by default as shown in the example below.

R1(config)#ip access-list extended EXTERNAL_ACL
R1(config-ext-nacl)#permit tcp any any established
R1(config-ext-nacl)#permit tcp host x.11.1.1 eq bgp host x.11.1.2 
R1(config-ext-nacl)#permit tcp host x.11.1.1 host x.11.1.2 eq bgp
R1(config-ext-nacl)#permit icmp host x.11.1.1 host x.11.1.2 echo
R1(config-ext-nacl)#permit icmp host x.11.1.1 host x.11.1.2 echo-reply
…
…
…
R1(config-ext-nacl)#deny ip any any log-input

Step 2: Apply the ingress filter to all external interfaces
R1(config)#int g0/2
R1(config-if)#ip access-group EXTERNAL_ACL in  

CCI: CCI-001109
_____________________________________________________________</RemediateScript>
          <ConfigBlockStart>ip access-list </ConfigBlockStart>
          <ConfigBlockEnd>!</ConfigBlockEnd>
          <ConfigBlockPatternType>Like</ConfigBlockPatternType>
          <ConfigBlockMustExist>false</ConfigBlockMustExist>
          <PatternType>Like</PatternType>
          <PatternMustExist>true</PatternMustExist>
          <AdvancedMode>true</AdvancedMode>
          <ErrorLevel>2</ErrorLevel>
          <SimplePatternText />
          <ExecuteScriptAutomatically>false</ExecuteScriptAutomatically>
          <Owner>admin</Owner>
          <RemediateScriptType>CLI</RemediateScriptType>
          <ExecuteRemediationScriptPerBlock>false</ExecuteRemediationScriptPerBlock>
          <ExecuteScriptInConfigMode>false</ExecuteScriptInConfigMode>
        </PolicyRule>
        <PolicyRule>
          <MultiLineRulePatterns>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition />
              <Pattern>permit tcp any any established</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>permit icmp host x.12.1.16 host x.12.1.17 echo</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>permit icmp host x.12.1.16 host x.12.1.17 echo-reply</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>permit tcp any host x.12.1.22 eq www</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>permit tcp any host x.12.1.23 eq www</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>permit 50 any host x.12.1.24</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>permit 51 any host x.12.1.24</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>deny ip any any log-input</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
          </MultiLineRulePatterns>
          <RuleId>c5ffb885-e1c2-4427-81cc-47565457f480</RuleId>
          <RuleName>CSCO-IOS-RTR-CISC-RT-000280 - ACL</RuleName>
          <Comments>The Cisco perimeter router must be configured to protect an enclave connected to an alternate gateway by using an inbound filter that only permits packets with destination addresses within the sites address space.</Comments>
          <Grouping>CSCO-IOS-RTR</Grouping>
          <RemediateScript>Check Content:  
This requirement is not applicable for the DODIN Backbone.

Step 1: Verify the interface connecting to ISP has an inbound ACL as shown in the example below.

interface GigabitEthernet0/2
 description Link to ISP
 ip address x.22.1.15 255.255.255.240
 ip access-group FILTER_ISP in

Step 2: Verify that the ACL only allows traffic to specific destination addresses (i.e. enclave’s NIPRNet address space) as shown in the example below.

ip access-list extended FILTER_ISP
 permit tcp any any established
 permit icmp host x.12.1.16 host x.12.1.17 echo
 permit icmp host x.12.1.16 host x.12.1.17 echo-reply
 permit tcp any host x.12.1.22 eq www
 permit tcp any host x.12.1.23 eq www
 permit 50 any host x.12.1.24
 permit 51 any host x.12.1.24
 deny ip any any log-input

If the ingress ACL bound to the interface connecting to an alternate gateway permits packets with addresses other than those specified, such as destination addresses of the site's NIPRNet address space or a destination address belonging to the address block assigned by the alternate gateway network service provider, this is a finding.

Fix Text: This requirement is not applicable for the DODIN Backbone.

Configure the ingress ACL of the perimeter router connected to an alternate gateway to only permit packets with destination addresses of the site's NIPRNet address space or a destination address belonging to the address block assigned by the alternate gateway network service provider as shown in the example below.

R5(config)#ip access-list extended FILTER_ISP
R5(config-ext-nacl)#permit tcp any any established
R5(config-ext-nacl)#permit icmp host x.12.1.16 host x.12.1.17 echo
R5(config-ext-nacl)#permit icmp host x.12.1.16 host x.12.1.17 echo-reply
R5(config-ext-nacl)#permit tcp any host x.12.1.22 eq www
R5(config-ext-nacl)#permit tcp any host x.12.1.23 eq www
R5(config-ext-nacl)#permit 50 any host x.12.1.24
R5(config-ext-nacl)#permit 51 any host x.12.1.24
R5(config-ext-nacl)#deny ip any any log-input
R5(config-ext-nacl)#end  

CCI: CCI-001414
_____________________________________________________________
</RemediateScript>
          <ConfigBlockStart>ip access-list extended FILTER_ISP</ConfigBlockStart>
          <ConfigBlockEnd>!</ConfigBlockEnd>
          <ConfigBlockPatternType>Like</ConfigBlockPatternType>
          <ConfigBlockMustExist>false</ConfigBlockMustExist>
          <PatternType>Like</PatternType>
          <PatternMustExist>true</PatternMustExist>
          <AdvancedMode>true</AdvancedMode>
          <ErrorLevel>2</ErrorLevel>
          <SimplePatternText />
          <ExecuteScriptAutomatically>false</ExecuteScriptAutomatically>
          <Owner>admin</Owner>
          <RemediateScriptType>CLI</RemediateScriptType>
          <ExecuteRemediationScriptPerBlock>false</ExecuteRemediationScriptPerBlock>
          <ExecuteScriptInConfigMode>false</ExecuteScriptInConfigMode>
        </PolicyRule>
        <PolicyRule>
          <MultiLineRulePatterns>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Regex</PatternType>
              <Condition />
              <Pattern />
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
          </MultiLineRulePatterns>
          <RuleId>f76992e7-9378-4a78-ac4a-487917b97c70</RuleId>
          <RuleName>CSCO-IOS-RTR-CISC-RT-000900 - ACL</RuleName>
          <Comments>The Cisco Multicast Source Discovery Protocol (MSDP) router must be configured to only accept MSDP packets from known MSDP peers.</Comments>
          <Grouping>CSCO-IOS-RTR</Grouping>
          <RemediateScript>Check Content:  
Review the router configuration to determine if there is a receive path or interface filter to only accept MSDP packets from known MSDP peers.

Step 1: Verify that interfaces used for MSDP peering have an inbound ACL as shown in the example.

interface GigabitEthernet1/1
 ip address x.1.28.8 255.255.255.0
 ip access-group EXTERNAL_ACL_INBOUND in
 ip pim sparse-mode

Step 2: Verify that the ACL restricts MSDP peering to only known sources.

ip access-list extended EXTERNAL_ACL_INBOUND
 permit tcp any any established
 permit tcp host x.1.28.2 host x.1.28.8 eq 639
 deny tcp any host x.1.28.8 eq 639 log
 permit tcp host x.1.28.2 host 10.1.28.8 eq bgp
 permit tcp host x.1.28.2 eq bgp host x.1.28.8
 permit pim host x.1.28.2 pim host x.1.28.8
…
 …
 …
deny ip any any log

Note: MSDP connections is via TCP port 639

If the router is not configured to only accept MSDP packets from known MSDP peers, this is a finding.

Fix Text: Configure the receive path or interface ACLs to only accepts MSDP packets from known MSDP peers.

R8(config)#ip access-list extended EXTERNAL_ACL_INBOUND
R8(config-ext-nacl)#permit tcp any any established
R8(config-ext-nacl)#permit tcp host x.1.28.2 host x.1.28.8 eq 639
R8(config-ext-nacl)#deny tcp any host x1.28.8 eq 639
R8(config-ext-nacl)#permit tcp host x.1.28.2 host x.1.28.8 eq bgp
R8(config-ext-nacl)#permit tcp host x.1.28.2 eq bgp host x.1.28.8
R8(config-ext-nacl)#permit pim host x.1.28.2 host x.1.28.8
…
…
…
R8(config-ext-nacl)#deny ip any any  

CCI: CCI-002403
_____________________________________________________________</RemediateScript>
          <ConfigBlockStart />
          <ConfigBlockEnd />
          <ConfigBlockPatternType>Like</ConfigBlockPatternType>
          <ConfigBlockMustExist>false</ConfigBlockMustExist>
          <PatternType>Like</PatternType>
          <PatternMustExist>true</PatternMustExist>
          <AdvancedMode>false</AdvancedMode>
          <ErrorLevel>1</ErrorLevel>
          <SimplePatternText>ip access-group EXTERNAL_ACL_INBOUND in</SimplePatternText>
          <ExecuteScriptAutomatically>false</ExecuteScriptAutomatically>
          <Owner>admin</Owner>
          <RemediateScriptType>CLI</RemediateScriptType>
          <ExecuteRemediationScriptPerBlock>false</ExecuteRemediationScriptPerBlock>
          <ExecuteScriptInConfigMode>false</ExecuteScriptInConfigMode>
        </PolicyRule>
        <PolicyRule>
          <MultiLineRulePatterns>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Regex</PatternType>
              <Condition />
              <Pattern />
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
          </MultiLineRulePatterns>
          <RuleId>74a9f6ff-5b2b-4d22-a4dd-553a3be7cd9d</RuleId>
          <RuleName>CSCO-IOS-RTR-CISC-RT-000320 - ACL</RuleName>
          <Comments>The Cisco perimeter router must be configured to filter traffic destined to the enclave in accordance with the guidelines contained in DoD Instruction 8551.1.</Comments>
          <Grouping>CSCO-IOS-RTR</Grouping>
          <RemediateScript>Check Content:  
This requirement is not applicable for the DODIN Backbone.

Review the router configuration to verify that the ingress ACL is in accordance with DoD 8551.1.

Step 1: Verify that an inbound ACL is configured on all external interfaces.

interface GigabitEthernet0/2
 ip address x.11.1.2 255.255.255.254
 ip access-group EXTERNAL_ACL_INBOUND in

Step 2. Review the inbound ACL to verify that it is filtering traffic in accordance with DoD 8551.1.

ip access-list extended EXTERNAL_ACL_INBOUND
 permit tcp any any established
 permit tcp host x.11.1.1 eq bgp host x.11.1.2
 permit tcp host x.11.1.1 host x.11.1.2 eq bgp
 permit icmp host x.11.1.1 host x.11.1.2 echo
 permit icmp host x.11.1.1 host x.11.1.2 echo-reply
…
 … &lt; must be in accordance with DoD Instruction 8551.1&gt;
…
deny ip any any log-input

If the router does not filter traffic in accordance with the guidelines contained in DoD 8551.1, this is a finding.

Fix Text: This requirement is not applicable for the DODIN Backbone.

Configure the router to use an inbound ACL on all external interfaces as shown in the example below to restrict traffic in accordance with the guidelines contained in DOD Instruction 8551.1.

R1(config)#ip access-list extended EXTERNAL_ACL_INBOUND
R1(config-ext-nacl)#permit tcp any any established
R1(config-ext-nacl)#permit tcp host x.11.1.1 eq bgp host x.11.1.2 
R1(config-ext-nacl)#permit tcp host x.11.1.1 host x.11.1.2 eq bgp
R1(config-ext-nacl)#permit icmp host x.11.1.1 host x.11.1.2 echo
R1(config-ext-nacl)#permit icmp host x.11.1.1 host x.11.1.2 echo-reply
…
… &lt; must be in accordance with DoD Instruction 8551.1&gt;
…
R1(config-ext-nacl)#deny ip any any log-input
R1(config-ext-nacl)#exit
R1(config)#int g0/2
R1(config-if)#ip access-group EXTERNAL_ACL_INBOUND in  

CCI: CCI-001097
_____________________________________________________________</RemediateScript>
          <ConfigBlockStart />
          <ConfigBlockEnd />
          <ConfigBlockPatternType>Like</ConfigBlockPatternType>
          <ConfigBlockMustExist>false</ConfigBlockMustExist>
          <PatternType>Like</PatternType>
          <PatternMustExist>true</PatternMustExist>
          <AdvancedMode>false</AdvancedMode>
          <ErrorLevel>1</ErrorLevel>
          <SimplePatternText>ip access-group EXTERNAL_ACL_INBOUND in  </SimplePatternText>
          <ExecuteScriptAutomatically>false</ExecuteScriptAutomatically>
          <Owner>admin</Owner>
          <RemediateScriptType>CLI</RemediateScriptType>
          <ExecuteRemediationScriptPerBlock>false</ExecuteRemediationScriptPerBlock>
          <ExecuteScriptInConfigMode>false</ExecuteScriptInConfigMode>
        </PolicyRule>
        <PolicyRule>
          <MultiLineRulePatterns>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition />
              <Pattern>ip access-list extended EXTERNAL_ACL</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>permit tcp host x.11.1.1 eq bgp host x.11.1.2</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>permit tcp host x.11.1.1 host x.11.1.2 eq bgp</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>deny icmp any host x.11.1.2 fragments</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>permit icmp host x.11.1.1 host x.11.1.2 echo</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>deny ip any any</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>ip access-list extended INTERNAL_ACL</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>deny icmp any host 10.1.12.2 fragments</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>permit icmp any any</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
          </MultiLineRulePatterns>
          <RuleId>fc23386c-4f19-4c06-b667-604cd577ef72</RuleId>
          <RuleName>CSCO-IOS-RTR-CISC-RT-000140 - ACL</RuleName>
          <Comments>The Cisco router must be configured to drop all fragmented Internet Control Message Protocol (ICMP) packets destined to itself.</Comments>
          <Grouping>CSCO-IOS-RTR</Grouping>
          <RemediateScript>Check Content:  
Review the external and internal ACLs to verify that the router is configured to drop all fragmented ICMP packets destined to itself.

ip access-list extended EXTERNAL_ACL
 permit tcp host x.11.1.1 eq bgp host x.11.1.2
 permit tcp host x.11.1.1 host x.11.1.2 eq bgp
 deny icmp any host x.11.1.2 fragments
 permit icmp host x.11.1.1 host x.11.1.2 echo
…
 …
deny ip any any
!
ip access-list extended INTERNAL_ACL
deny icmp any host 10.1.12.2 fragments
permit icmp any any

Note: Ensure the statement to deny ICMP fragments is before any permit statements for ICMP.

If the router is not configured to drop all fragmented ICMP packets destined to itself, this is a finding.

Fix Text: Configure the external and internal ACLs to drop all fragmented ICMP packets destined to itself as shown in the example below.

R1(config)#ip access-list extended EXTERNAL_ACL
R1(config-ext-nacl)#deny icmp any host x.11.1.2 fragments

R1(config)#ip access-list extended INTERNAL_ACL
R1(config-ext-nacl)#deny icmp any host 10.1.12.2 fragments

Note: Ensure the above statement is before any permit statements for ICMP.  

CCI: CCI-001097
_____________________________________________________________</RemediateScript>
          <ConfigBlockStart />
          <ConfigBlockEnd />
          <ConfigBlockPatternType>Like</ConfigBlockPatternType>
          <ConfigBlockMustExist>false</ConfigBlockMustExist>
          <PatternType>Like</PatternType>
          <PatternMustExist>true</PatternMustExist>
          <AdvancedMode>true</AdvancedMode>
          <ErrorLevel>1</ErrorLevel>
          <SimplePatternText />
          <ExecuteScriptAutomatically>false</ExecuteScriptAutomatically>
          <Owner>admin</Owner>
          <RemediateScriptType>CLI</RemediateScriptType>
          <ExecuteRemediationScriptPerBlock>false</ExecuteRemediationScriptPerBlock>
          <ExecuteScriptInConfigMode>false</ExecuteScriptInConfigMode>
        </PolicyRule>
        <PolicyRule>
          <MultiLineRulePatterns>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition />
              <Pattern>class-map match-all C2_VOICE</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>match ip dscp af47</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>class-map match-all VOICE</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>match ip dscp ef</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>class-map match-all VIDEO</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>match ip dscp af41</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>class-map match-all CONTROL_PLANE</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>match ip dscp cs6</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>class-map match-all PREFERRED_DATA</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>match ip dscp af33</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
          </MultiLineRulePatterns>
          <RuleId>1de8e013-ebd4-4098-be87-62a5ea4b0541</RuleId>
          <RuleName>CSCO-IOS-RTR-CISC-RT-000760 - ACL</RuleName>
          <Comments>The Cisco PE router must be configured to enforce a Quality-of-Service (QoS) policy in accordance with the QoS DODIN Technical Profile.</Comments>
          <Grouping>CSCO-IOS-RTR</Grouping>
          <RemediateScript>Check Content:  
Review the router configuration and verify that a QoS policy has been configured to provide preferred treatment for mission-critical applications in accordance with the QoS DODIN Technical Profile. 

Step 1: Verify that the class-maps are configured to match on DSCP values as shown in the configuration example below.

class-map match-all C2_VOICE
 match ip dscp af47
class-map match-all VOICE
 match ip dscp ef
class-map match-all VIDEO
 match ip dscp af41
class-map match-all CONTROL_PLANE
 match ip dscp cs6
class-map match-all PREFERRED_DATA
 match ip dscp af33

Step 2: Verify that the policy map reserves the bandwidth for each traffic type as shown in the following example:

policy-map QOS_POLICY
class C2_VOICE
 priority percent 10
 class VOICE
 priority percent 15
 class VIDEO
 bandwidth percent 25
class CONTROL_PLANE
 priority percent 10
 class PREFERRED_DATA
 bandwidth percent 25
 class class-default
 bandwidth percent 15

Step 3: Verify that an output service policy is bound to all interfaces as shown in the configuration example below.

interface GigabitEthernet1/1
 ip address 10.1.15.1 255.255.255.252
 service-policy output QOS_POLICY
!
interface GigabitEthernet1/2
 ip address 10.1.15.4 255.255.255.252
 service-policy output QOS_POLICY

Note. Enclaves must mark or re-mark their traffic to be consistent with the DODIN backbone admission criteria to gain the appropriate level of service. A general DiffServ principle is to mark or trust traffic as close to the source as administratively and technically possible. However, certain traffic types might need to be re-marked before handoff to the DODIN backbone to gain admission to the correct class. If such re-marking is required, it is recommended that the re-marking be performed at the CE egress edge.

If the router is not configured to enforce a QoS policy in accordance with the QoS DODIN Technical Profile, this is a finding.

Fix Text: Configure a QoS policy in accordance with the QoS DODIN Technical Profile.

Step 1: Configure class-maps to match on DSCP values as shown in the configuration example below.

R5(config-cmap)#class-map match-all C2_VOICE
R5(config-cmap)#match ip dscp 47
R5(config-cmap)#class-map match-all VOICE
R5(config-cmap)#match ip dscp ef
R5(config-cmap)#class-map match-all VIDEO
R5(config-cmap)#match ip dscp af41
R5(config-cmap)#class-map match-all CONTROL_PLANE
R5(config-cmap)#match ip dscp cs6
R5(config)#class-map match-all PREFERRED_DATA
R5(config-cmap)#match ip dscp af33
R5(config-cmap)#exit

Step 2: Configure a policy map to be applied to the core-layer-facing interface that reserves the bandwidth for each traffic type as shown in the example below.

R5(config)#policy-map QOS_POLICY
R5(config-pmap-c)#class C2_VOICE
R5(config-pmap-c)#priority percent 10
R5(config-pmap-c)#class VOICE
R5(config-pmap-c)#priority percent 15
R5(config-pmap-c)#class VIDEO
R5(config-pmap-c)#bandwidth percent 25
R5(config-pmap)#class CONTROL_PLANE
R5(config-pmap-c)#priority percent 10
R5(config-pmap-c)#class PREFERRED_DATA
R5(config-pmap-c)#bandwidth percent 25
R5(config-pmap-c)#class class-default
R5(config-pmap-c)#bandwidth percent 15
R5(config-pmap-c)#exit
R5(config-pmap)#exit

Step 3: Apply the output service policy to the core-layer-facing interface as shown in the configuration example below.

R5(config)#int g1/1
R5(config-if)#service-policy output QOS_POLICY
R5(config-if)#exit
R5(config)#int g1/2
R5(config-if)#service-policy output QOS_POLICY
R5(config-if)#end  

CCI: CCI-001095
_____________________________________________________________
</RemediateScript>
          <ConfigBlockStart />
          <ConfigBlockEnd />
          <ConfigBlockPatternType>Like</ConfigBlockPatternType>
          <ConfigBlockMustExist>false</ConfigBlockMustExist>
          <PatternType>Like</PatternType>
          <PatternMustExist>true</PatternMustExist>
          <AdvancedMode>true</AdvancedMode>
          <ErrorLevel>0</ErrorLevel>
          <SimplePatternText />
          <ExecuteScriptAutomatically>false</ExecuteScriptAutomatically>
          <Owner>admin</Owner>
          <RemediateScriptType>CLI</RemediateScriptType>
          <ExecuteRemediationScriptPerBlock>false</ExecuteRemediationScriptPerBlock>
          <ExecuteScriptInConfigMode>false</ExecuteScriptInConfigMode>
        </PolicyRule>
        <PolicyRule>
          <MultiLineRulePatterns>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition />
              <Pattern>class-map match-all PREFERRED_DATA</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>match ip dscp af33</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>class-map match-all CONTROL_PLANE</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>match ip dscp cs6</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>class-map match-all VIDEO</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>match ip dscp af41</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>class-map match-all VOICE</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>match ip dscp ef</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>class-map match-all C2_VOICE</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>match ip dscp 47</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
          </MultiLineRulePatterns>
          <RuleId>d2814891-2c20-47a9-965e-677e4cb176fe</RuleId>
          <RuleName>CSCO-IOS-RTR-CISC-RT-000770 - ACL</RuleName>
          <Comments>The Cisco P router must be configured to implement a Quality-of-Service (QoS) policy in accordance with the QoS DODIN Technical Profile.</Comments>
          <Grouping>CSCO-IOS-RTR</Grouping>
          <RemediateScript>Check Content:  
Review the router configuration and verify that a QoS policy has been configured to provide preferred treatment for mission-critical applications in accordance with the QoS DODIN Technical Profile. 

Step 1: Verify that the class-maps are configured to match on DSCP values as shown in the configuration example below.

class-map match-all PREFERRED_DATA
 match ip dscp af33
class-map match-all CONTROL_PLANE
 match ip dscp cs6
class-map match-all VIDEO
 match ip dscp af41
class-map match-all VOICE
 match ip dscp ef
class-map match-all C2_VOICE
 match ip dscp 47

Step 2: Verify that the policy map reserves the bandwidth for each traffic type as shown in the following example:

policy-map QOS_POLICY
 class CONTROL_PLANE
 priority percent 10
 class C2_VOICE
 priority percent 10
 class VOICE
 priority percent 15
 class VIDEO
 bandwidth percent 25
 class PREFERRED_DATA
 bandwidth percent 25
 class class-default
 bandwidth percent 15

Step 3: Verify that an output service policy is bound to all interfaces as shown in the configuration example below.

interface GigabitEthernet1/1
 ip address 10.1.15.5 255.255.255.252
 service-policy output QOS_POLICY
!
interface GigabitEthernet1/2
 ip address 10.1.15.8 255.255.255.252
 service-policy output QOS_POLICY

If the router is not configured to implement a QoS policy in accordance with the QoS DODIN Technical Profile, this is a finding.

Fix Text: Configure a QoS policy in accordance with the QoS DODIN Technical Profile.

Step 1: Configure class-maps to match on DSCP values as shown in the configuration example below.

R5(config)#class-map match-all PREFERRED_DATA
R5(config-cmap)#match ip dscp af33
R5(config-cmap)#class-map match-all CONTROL_PLANE
R5(config-cmap)#match ip dscp cs6
R5(config-cmap)#class-map match-all VIDEO
R5(config-cmap)#match ip dscp af41
R5(config-cmap)#class-map match-all VOICE
R5(config-cmap)#match ip dscp ef
R5(config-cmap)#class-map match-all C2_VOICE
R5(config-cmap)#match ip dscp 47
R5(config-cmap)#exit

Step 2: Configure a policy map to be applied to the core-layer-facing interface that reserves the bandwidth for each traffic type as shown in the example below.

R5(config)#policy-map QOS_POLICY
R5(config-pmap)#class CONTROL_PLANE
R5(config-pmap-c)#priority percent 10
R5(config-pmap-c)#class C2_VOICE
R5(config-pmap-c)#priority percent 10
R5(config-pmap-c)#class VOICE
R5(config-pmap-c)#priority percent 15
R5(config-pmap-c)#class VIDEO
R5(config-pmap-c)#bandwidth percent 25
R5(config-pmap-c)#class PREFERRED_DATA
R5(config-pmap-c)#bandwidth percent 25
R5(config-pmap-c)#class class-default
R5(config-pmap-c)#bandwidth percent 15
R5(config-pmap-c)#exit
R5(config-pmap)#exit

Step 3: Apply the output service policy to all interfaces as shown in the configuration example below.

R5(config)#int g1/1
R5(config-if)#service-policy output QOS_POLICY
R5(config-if)#exit
R5(config)#int g1/2
R5(config-if)#service-policy output QOS_POLICY
R5(config-if)#end  

CCI: CCI-001095
_____________________________________________________________
</RemediateScript>
          <ConfigBlockStart />
          <ConfigBlockEnd />
          <ConfigBlockPatternType>Like</ConfigBlockPatternType>
          <ConfigBlockMustExist>false</ConfigBlockMustExist>
          <PatternType>Like</PatternType>
          <PatternMustExist>true</PatternMustExist>
          <AdvancedMode>true</AdvancedMode>
          <ErrorLevel>0</ErrorLevel>
          <SimplePatternText />
          <ExecuteScriptAutomatically>false</ExecuteScriptAutomatically>
          <Owner>admin</Owner>
          <RemediateScriptType>CLI</RemediateScriptType>
          <ExecuteRemediationScriptPerBlock>false</ExecuteRemediationScriptPerBlock>
          <ExecuteScriptInConfigMode>false</ExecuteScriptInConfigMode>
        </PolicyRule>
        <PolicyRule>
          <MultiLineRulePatterns>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Regex</PatternType>
              <Condition />
              <Pattern />
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
          </MultiLineRulePatterns>
          <RuleId>e66830f1-6868-4889-bf79-68d99ea41545</RuleId>
          <RuleName>CSCO-IOS-RTR-CISC-RT-000250 - ACL</RuleName>
          <Comments>The Cisco perimeter router must be configured to enforce approved authorizations for controlling the flow of information between interconnected networks in accordance with applicable policy.</Comments>
          <Grouping>CSCO-IOS-RTR</Grouping>
          <RemediateScript>Check Content:  
Review the router configuration to verify that ACLs are configured to allow or deny traffic for specific source and destination addresses as well as ports and protocols. In the example below, the router is peering BGP with DISN. ICMP echo and echo-reply packets are allowed for troubleshooting connectivity. WWW traffic is permitted inbound to the NIPRNet host-facing web server (x.12.1.22).

interface GigabitEthernet0/1
 description Link to DISN
 ip address x.12.1.10 255.255.255.0
 ip access-group FILTER_PERIMETER in
…
…
…
ip access-list extended FILTER_PERIMETER
 permit tcp any any established
 permit tcp host x.12.1.9 host x.12.1.10 eq bgp
 permit tcp host x.12.1.9 eq bgp host x.12.1.10
 permit icmp host x.12.1.9 host x.12.1.10 echo
 permit icmp host x.12.1.9 host x.12.1.10 echo-reply
 permit tcp any host x.12.1.22 eq www
 deny ip any any log-input

If the router is not configured to enforce approved authorizations for controlling the flow of information between interconnected networks, this is a finding.

Fix Text: This requirement is not applicable for the DODIN Backbone.

Step 1: Configure an ACL to allow or deny traffic as shown in the example below.

R1(config)#ip access-list extended FILTER_PERIMETER
R1(config-ext-nacl)#permit tcp any any established
R1(config-ext-nacl)#permit tcp host x.12.1.9 host x.12.1.10 eq bgp
R1(config-ext-nacl)#permit tcp host x.12.1.9 eq bgp host x.12.1.10
R1(config-ext-nacl)#permit icmp host x.12.1.9 host x.12.1.10 echo
R1(config-ext-nacl)#permit icmp host x.12.1.9 host x.12.1.10 echo-reply
R1(config-ext-nacl)#permit tcp any host x.12.1.22 eq www
R1(config-ext-nacl)#deny ip any any log-input
R1(config-ext-nacl)#exit

Step 2: Apply the ACL inbound on all external interfaces.

R2(config)#int g0/0
R1(config-if)#ip access-group FILTER_PERIMETER in  

CCI: CCI-001414
_____________________________________________________________</RemediateScript>
          <ConfigBlockStart />
          <ConfigBlockEnd />
          <ConfigBlockPatternType>Like</ConfigBlockPatternType>
          <ConfigBlockMustExist>false</ConfigBlockMustExist>
          <PatternType>Like</PatternType>
          <PatternMustExist>true</PatternMustExist>
          <AdvancedMode>false</AdvancedMode>
          <ErrorLevel>1</ErrorLevel>
          <SimplePatternText>ip access-group FILTER_PERIMETER in  </SimplePatternText>
          <ExecuteScriptAutomatically>false</ExecuteScriptAutomatically>
          <Owner>admin</Owner>
          <RemediateScriptType>CLI</RemediateScriptType>
          <ExecuteRemediationScriptPerBlock>false</ExecuteRemediationScriptPerBlock>
          <ExecuteScriptInConfigMode>false</ExecuteScriptInConfigMode>
        </PolicyRule>
        <PolicyRule>
          <MultiLineRulePatterns>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition />
              <Pattern>deny ip any host 224.0.1.3</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>deny ip any host 224.0.1.24</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>deny ip any host 224.0.1.22</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>deny ip any host 224.0.1.2</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>deny ip any host 224.0.1.35</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>deny ip any host 224.0.1.60</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>deny ip any host 224.0.1.39</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>deny ip any host 224.0.1.40</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>deny ip any 232.0.0.0 0.255.255.255</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>deny ip any 239.0.0.0 0.255.255.255</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>deny ip 10.0.0.0 0.255.255.255 any</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>deny ip 127.0.0.0 0.255.255.255 any</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>deny ip 172.16.0.0 0.15.255.255 any</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>deny ip 192.168.0.0 0.0.255.255 any</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>permit ip any any</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
          </MultiLineRulePatterns>
          <RuleId>f7432705-040a-405e-8ad4-6d3856f538eb</RuleId>
          <RuleName>CSCO-IOS-RTR-CISC-RT-000920 - ACL</RuleName>
          <Comments>The Cisco Multicast Source Discovery Protocol (MSDP) router must be configured to filter received source-active multicast advertisements for any undesirable multicast groups and sources.</Comments>
          <Grouping>CSCO-IOS-RTR</Grouping>
          <RemediateScript>Check Content:  
Review the router configuration to determine if there is import policy to block source-active multicast advertisements for any undesirable multicast groups, as well as any (S, G) states with undesirable source addresses. 

Step 1: Verify that an inbound source-active filter is bound to each MSDP peer.

ip msdp peer x.1.28.2 remote-as 2
ip msdp sa-filter in x.1.28.2 list INBOUND_MSDP_SA_FILTER

Step 2: Review the access lists referenced by the source-active filter to verify that undesirable multicast groups, auto-RP, single source multicast (SSM) groups, and advertisements from undesirable sources are blocked.

ip access-list extended INBOUND_MSDP_SA_FILTER
 deny ip any host 224.0.1.3
 deny ip any host 224.0.1.24
 deny ip any host 224.0.1.22
 deny ip any host 224.0.1.2
 deny ip any host 224.0.1.35
 deny ip any host 224.0.1.60
 deny ip any host 224.0.1.39
 deny ip any host 224.0.1.40
 deny ip any 232.0.0.0 0.255.255.255
 deny ip any 239.0.0.0 0.255.255.255
 deny ip 10.0.0.0 0.255.255.255 any
 deny ip 127.0.0.0 0.255.255.255 any
 deny ip 172.16.0.0 0.15.255.255 any
 deny ip 192.168.0.0 0.0.255.255 any
 permit ip any any

If the router is not configured with an import policy to filter undesirable SA multicast advertisements, this is a finding.

Fix Text: Configure the MSDP router to filter received source-active multicast advertisements for any undesirable multicast groups and sources as shown in the example below.

R8(config)#ip access-list extended INBOUND_MSDP_SA_FILTER
R8(config-ext-nacl)#deny ip any host 224.0.1.3 ! Rwhod 
R8(config-ext-nacl)#deny ip any host 224.0.1.24 ! Microsoft-ds
R8(config-ext-nacl)#deny ip any host 224.0.1.22 ! SVRLOC
R8(config-ext-nacl)#deny ip any host 224.0.1.2 ! SGI-Dogfight
R8(config-ext-nacl)#deny ip any host 224.0.1.35 ! SVRLOC-DA
R8(config-ext-nacl)#deny ip any host 224.0.1.60 ! hp-device-disc
R8(config-ext-nacl)#deny ip any host 224.0.1.39 ! Auto-RP
R8(config-ext-nacl)#deny ip any host 224.0.1.40 ! Auto-RP
R8(config-ext-nacl)#deny ip any 232.0.0.0 0.255.255.255 ! SSM range
R8(config-ext-nacl)#deny ip any 239.0.0.0 0.255.255.255 ! Admin scoped range
R8(config-ext-nacl)#deny ip 10.0.0.0 0.255.255.255 any ! RFC 1918 address range
R8(config-ext-nacl)#deny ip 127.0.0.0 0.255.255.255 any ! RFC 1918 address range
R8(config-ext-nacl)#deny ip 172.16.0.0 0.15.255.255 any ! RFC 1918 address range
R8(config-ext-nacl)#deny ip 192.168.0.0 0.0.255.255 any ! RFC 1918 address range
R8(config-ext-nacl)#permit ip any any
R8(config-ext-nacl)#exit
R8(config)#ip msdp sa-filter in x.1.28.2 list INBOUND_MSDP_SA_FILTER  

CCI: CCI-001368
_____________________________________________________________</RemediateScript>
          <ConfigBlockStart>ip access-list extended INBOUND_MSDP_SA_FILTER</ConfigBlockStart>
          <ConfigBlockEnd>!</ConfigBlockEnd>
          <ConfigBlockPatternType>Like</ConfigBlockPatternType>
          <ConfigBlockMustExist>false</ConfigBlockMustExist>
          <PatternType>Like</PatternType>
          <PatternMustExist>true</PatternMustExist>
          <AdvancedMode>true</AdvancedMode>
          <ErrorLevel>0</ErrorLevel>
          <SimplePatternText />
          <ExecuteScriptAutomatically>false</ExecuteScriptAutomatically>
          <Owner>admin</Owner>
          <RemediateScriptType>CLI</RemediateScriptType>
          <ExecuteRemediationScriptPerBlock>false</ExecuteRemediationScriptPerBlock>
          <ExecuteScriptInConfigMode>false</ExecuteScriptInConfigMode>
        </PolicyRule>
        <PolicyRule>
          <MultiLineRulePatterns>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition />
              <Pattern>class CONTROL_PLANE</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>priority percent 10</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>class C2_VOICE</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>priority percent 10</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>class VOICE</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>priority percent 15</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>class VIDEO</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>bandwidth percent 25</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>class PREFERRED_DATA</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>bandwidth percent 25</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>class SCAVENGER</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>bandwidth percent 5</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>class class-default</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>bandwidth percent 10</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
          </MultiLineRulePatterns>
          <RuleId>369448c2-9257-4125-8996-787e28df0303</RuleId>
          <RuleName>CSCO-IOS-RTR-CISC-RT-000780 - ACL</RuleName>
          <Comments>The Cisco router must be configured to enforce a Quality-of-Service (QoS) policy to limit the effects of packet flooding denial-of-service (DoS) attacks.
</Comments>
          <Grouping>CSCO-IOS-RTR</Grouping>
          <RemediateScript>Check Content:  
Review the router configuration to determine if it is configured to enforce a QoS policy to limit the effects of packet flooding DoS attacks.

Step 1: Verify that a class map has been configured for the Scavenger class as shown in the example below.

class-map match-all SCAVENGER
 match ip dscp cs1

Step 2: Verify that the policy map includes the SCAVENGER class with low priority as shown in the following example below. 

policy-map QOS_POLICY
 class CONTROL_PLANE
 priority percent 10
 class C2_VOICE
 priority percent 10
 class VOICE
 priority percent 15
 class VIDEO
 bandwidth percent 25
 class PREFERRED_DATA
 bandwidth percent 25
class SCAVENGER
 bandwidth percent 5
 class class-default
 bandwidth percent 10

Note: Traffic out of profile must be marked at the customer access layer or CE egress edge.

If the router is not configured to enforce a QoS policy to limit the effects of packet flooding DoS attacks, this is a finding.

Fix Text: Step 1: Configure a class map for the SCAVENGER class.

R5(config)#class-map match-all SCAVENGER
R5(config-cmap)#match ip dscp cs1

Step 2: Add the SCAVENGER class to the policy map as shown in the example below.

R5(config)#policy-map QOS_POLICY
R5(config-pmap-c)#no class class-default
R5(config-pmap)#class SCAVENGER
R5(config-pmap-c)#bandwidth percent 5
R5(config-pmap-c)#class class-default
R5(config-pmap-c)#bandwidth percent 10
R5(config-pmap-c)#end  

CCI: CCI-001095
_____________________________________________________________</RemediateScript>
          <ConfigBlockStart>policy-map QOS_POLICY</ConfigBlockStart>
          <ConfigBlockEnd>!</ConfigBlockEnd>
          <ConfigBlockPatternType>Like</ConfigBlockPatternType>
          <ConfigBlockMustExist>false</ConfigBlockMustExist>
          <PatternType>Like</PatternType>
          <PatternMustExist>true</PatternMustExist>
          <AdvancedMode>true</AdvancedMode>
          <ErrorLevel>1</ErrorLevel>
          <SimplePatternText />
          <ExecuteScriptAutomatically>false</ExecuteScriptAutomatically>
          <Owner>admin</Owner>
          <RemediateScriptType>CLI</RemediateScriptType>
          <ExecuteRemediationScriptPerBlock>false</ExecuteRemediationScriptPerBlock>
          <ExecuteScriptInConfigMode>false</ExecuteScriptInConfigMode>
        </PolicyRule>
        <PolicyRule>
          <MultiLineRulePatterns>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition />
              <Pattern>ip access-list extended INGRESS_FILTER</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>permit tcp any any established</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>permit tcp host x.11.1.1 eq bgp host x.11.1.2</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>permit tcp host x.11.1.1 host x.11.1.2 eq bgp</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>permit tcp any host x.11.1.5 eq www</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>permit icmp host x.11.1.1 host x.11.1.2 echo</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>permit icmp any any echo-reply</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>deny ip any any log-input</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
          </MultiLineRulePatterns>
          <RuleId>cef728f6-4c18-4f7d-9d2d-7a91ac6e2247</RuleId>
          <RuleName>CSCO-IOS-RTR-CISC-RT-000220 - ACL</RuleName>
          <Comments>The Cisco router must be configured to produce audit records containing information to establish the source of the events.</Comments>
          <Grouping>CSCO-IOS-RTR</Grouping>
          <RemediateScript>Check Content:  
Review the router configuration to verify that events are logged containing information to establish the source of the events as shown in the example below.

ip access-list extended INGRESS_FILTER
 permit tcp any any established
 permit tcp host x.11.1.1 eq bgp host x.11.1.2
 permit tcp host x.11.1.1 host x.11.1.2 eq bgp
 permit tcp any host x.11.1.5 eq www
 permit icmp host x.11.1.1 host x.11.1.2 echo
 permit icmp any any echo-reply
…
 …
 …
deny ip any any log-input

Note: When the log-input parameter is configured on deny statements, the log record will contain the layer 2 address of the forwarding device for any packet being dropped.

If the router is not configured to produce audit records containing information to establish the source of the events, this is a finding.

Fix Text: Configure the router to log events containing information to establish where the events occurred as shown in the example below.

R5(config)#ip access-list extended INGRESS_FILTER
…
…
…
R5(config-ext-nacl)#deny ip any any log-input  

CCI: CCI-000133
_____________________________________________________________
</RemediateScript>
          <ConfigBlockStart />
          <ConfigBlockEnd />
          <ConfigBlockPatternType>Like</ConfigBlockPatternType>
          <ConfigBlockMustExist>false</ConfigBlockMustExist>
          <PatternType>Like</PatternType>
          <PatternMustExist>true</PatternMustExist>
          <AdvancedMode>true</AdvancedMode>
          <ErrorLevel>1</ErrorLevel>
          <SimplePatternText />
          <ExecuteScriptAutomatically>false</ExecuteScriptAutomatically>
          <Owner>admin</Owner>
          <RemediateScriptType>CLI</RemediateScriptType>
          <ExecuteRemediationScriptPerBlock>false</ExecuteRemediationScriptPerBlock>
          <ExecuteScriptInConfigMode>false</ExecuteScriptInConfigMode>
        </PolicyRule>
        <PolicyRule>
          <MultiLineRulePatterns>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition />
              <Pattern>deny ip 0.0.0.0 0.255.255.255 any log-input</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>deny ip 10.0.0.0 0.255.255.255 any log-input</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>deny ip 100.64.0.0 0.63.255.255 any log-input</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>deny ip 127.0.0.0 0.255.255.255 any log-input</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>deny ip 169.254.0.0 0.0.255.255 any log-input</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>deny ip 172.16.0.0 0.15.255.255 any log-input</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>deny ip 192.0.0.0 0.0.0.255 any log-input</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>deny ip 192.0.2.0 0.0.0.255 any log-input</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>deny ip 192.168.0.0 0.0.255.255 any log-input</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>deny ip 198.18.0.0 0.1.255.255 any log-input</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>deny ip 198.51.100.0 0.0.0.255 any log-input</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>deny ip 203.0.113.0 0.0.0.255 any log-input</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>deny ip 224.0.0.0 31.255.255.255 any log-input</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
          </MultiLineRulePatterns>
          <RuleId>b172c925-7899-462b-b98c-91d9541f5d28</RuleId>
          <RuleName>CSCO-IOS-RTR-CISC-RT-000270 - ACL</RuleName>
          <Comments>The Cisco perimeter router must be configured to block inbound packets with source Bogon IP address prefixes.</Comments>
          <Grouping>CSCO-IOS-RTR</Grouping>
          <RemediateScript>Check Content:  
This requirement is not applicable for the DODIN Backbone.

Review the router configuration to verify that an ingress Access Control List (ACL) applied to all external interfaces is blocking packets with Bogon source addresses.

Step 1: Verify an ACL has been configured containing the current Bogon prefixes as shown in the example below.

ip access-list extended FILTER_PERIMETER
 deny ip 0.0.0.0 0.255.255.255 any log-input
 deny ip 10.0.0.0 0.255.255.255 any log-input
 deny ip 100.64.0.0 0.63.255.255 any log-input
 deny ip 127.0.0.0 0.255.255.255 any log-input
 deny ip 169.254.0.0 0.0.255.255 any log-input
 deny ip 172.16.0.0 0.15.255.255 any log-input
 deny ip 192.0.0.0 0.0.0.255 any log-input
 deny ip 192.0.2.0 0.0.0.255 any log-input
 deny ip 192.168.0.0 0.0.255.255 any log-input
 deny ip 198.18.0.0 0.1.255.255 any log-input
 deny ip 198.51.100.0 0.0.0.255 any log-input
 deny ip 203.0.113.0 0.0.0.255 any log-input
 deny ip 224.0.0.0 31.255.255.255 any log-input
 permit tcp any any established
 permit tcp host x.12.1.9 host x.12.1.10 eq bgp
 permit tcp host x.12.1.9 eq bgp host x.12.1.10
 permit icmp host x.12.1.9 host x.12.1.10 echo
 permit icmp host x.12.1.9 host x.12.1.10 echo-reply
…
 …
 …
deny ip any any log-input

Step 2: Verify that the inbound ACL applied to all external interfaces will block all traffic from Bogon source addresses.

interface GigabitEthernet0/1
 description Link to DISN
 ip address x.12.1.10 255.255.255.254
 ip access-group FILTER_PERIMETER in

If the router is not configured to block inbound packets with source Bogon IP address prefixes, this is a finding.

Fix Text: This requirement is not applicable for the DODIN Backbone.

Configure the perimeter to block inbound packets with Bogon source addresses.

Step 1: Configure an ACL containing the current Bogon prefixes as shown below.

R5(config)#ip access-list extended FILTER_PERIMETER
R5(config-ext-nacl)#deny ip 0.0.0.0 0.255.255.255 any log-input
R5(config-ext-nacl)#deny ip 10.0.0.0 0.255.255.255 any log-input
R5(config-ext-nacl)#deny ip 100.64.0.0 0.63.255.255 any log-input
R5(config-ext-nacl)#deny ip 127.0.0.0 0.255.255.255 any log-input
R5(config-ext-nacl)#deny ip 169.254.0.0 0.0.255.255 any log-input
R5(config-ext-nacl)#deny ip 172.16.0.0 0.15.255.255 any log-input
R5(config-ext-nacl)#deny ip 192.0.0.0 0.0.0.255 any log-input
R5(config-ext-nacl)#deny ip 192.0.2.0 0.0.0.255 any log-input
R5(config-ext-nacl)#deny ip 192.168.0.0 0.0.255.255 any log-input
R5(config-ext-nacl)#deny ip 198.18.0.0 0.1.255.255 any log-input
R5(config-ext-nacl)#deny ip 198.51.100.0 0.0.0.255 any log-input
R5(config-ext-nacl)#deny ip 203.0.113.0 0.0.0.255 any log-input
R5(config-ext-nacl)#deny ip 224.0.0.0 31.255.255.255 any log-input
R5(config-ext-nacl)#deny ip 240.0.0.0 31.255.255.255 any log-input
R5(config-ext-nacl)#permit tcp any any established
R5(config-ext-nacl)#permit tcp host x.12.1.9 host x.12.1.10 eq bgp
R5(config-ext-nacl)#permit tcp host x.12.1.9 eq bgp host x.12.1.10
R5(config-ext-nacl)#permit icmp host x.12.1.9 host x.12.1.10 echo
R5(config-ext-nacl)#permit icmp host x.12.1.9 host x.12.1.10 echo-reply
…
…
…
R5(config-ext-nacl)#deny ip any any log-input
R5(config-ext-nacl)#end

Step 2: Apply the ACL inbound on all external interfaces.

R2(config)#int g0/0
R1(config-if)#ip access-group FILTER_PERIMETER in
R1(config-if)#end  

CCI: CCI-002403
_____________________________________________________________
</RemediateScript>
          <ConfigBlockStart>ip access-list extended FILTER_PERIMETER</ConfigBlockStart>
          <ConfigBlockEnd>!</ConfigBlockEnd>
          <ConfigBlockPatternType>Like</ConfigBlockPatternType>
          <ConfigBlockMustExist>false</ConfigBlockMustExist>
          <PatternType>Like</PatternType>
          <PatternMustExist>true</PatternMustExist>
          <AdvancedMode>true</AdvancedMode>
          <ErrorLevel>1</ErrorLevel>
          <SimplePatternText />
          <ExecuteScriptAutomatically>false</ExecuteScriptAutomatically>
          <Owner>admin</Owner>
          <RemediateScriptType>CLI</RemediateScriptType>
          <ExecuteRemediationScriptPerBlock>false</ExecuteRemediationScriptPerBlock>
          <ExecuteScriptInConfigMode>false</ExecuteScriptInConfigMode>
        </PolicyRule>
        <PolicyRule>
          <MultiLineRulePatterns>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Regex</PatternType>
              <Condition />
              <Pattern />
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
          </MultiLineRulePatterns>
          <RuleId>f32539c1-185c-4095-8b45-a666a77acaff</RuleId>
          <RuleName>CSCO-IOS-RTR-CISC-RT-000730 - ACL</RuleName>
          <Comments>The Cisco PE router must be configured to block any traffic that is destined to IP core infrastructure.</Comments>
          <Grouping>CSCO-IOS-RTR</Grouping>
          <RemediateScript>Check Content:  
Step 1: Review the router configuration to verify that an ingress ACL is applied to all external or CE-facing interfaces. 

interface GigabitEthernet0/2
 ip address x.1.12.2 255.255.255.252
 ip access-group BLOCK_TO_CORE in

Step 2: Verify that the ingress ACL discards and logs packets destined to the IP core address space. 

ip access-list extended BLOCK_TO_CORE
 deny ip any 10.1.x.0 0.0.255.255 log-input
 permit ip any any
!

If the PE router is not configured to block any traffic with a destination address assigned to the IP core infrastructure, this is a finding.

Note: Internet Control Message Protocol (ICMP) echo requests and traceroutes will be allowed to the edge from external adjacent neighbors.

Fix Text: Configure protection for the IP core to be implemented at the edges by blocking any traffic with a destination address assigned to the IP core infrastructure.

Step 1: Configure an ingress ACL to discard and log packets destined to the IP core address space. 

R2(config)#ip access-list extended BLOCK_TO_CORE
R2(config-ext-nacl)#deny ip any 10.1.x.0 0.0.255.255 log-input
R2(config-ext-nacl)#exit

Step 2: Apply the ACL inbound to all external or CE-facing interfaces.

R2(config)#int R4(config)#int g0/2
R2(config-if)#ip access-group BLOCK_TO_CORE in
R2(config-if)#end  

CCI: CCI-001097
_____________________________________________________________</RemediateScript>
          <ConfigBlockStart />
          <ConfigBlockEnd />
          <ConfigBlockPatternType>Like</ConfigBlockPatternType>
          <ConfigBlockMustExist>false</ConfigBlockMustExist>
          <PatternType>Like</PatternType>
          <PatternMustExist>true</PatternMustExist>
          <AdvancedMode>false</AdvancedMode>
          <ErrorLevel>2</ErrorLevel>
          <SimplePatternText>ip access-list extended BLOCK_TO_CORE</SimplePatternText>
          <ExecuteScriptAutomatically>false</ExecuteScriptAutomatically>
          <Owner>admin</Owner>
          <RemediateScriptType>CLI</RemediateScriptType>
          <ExecuteRemediationScriptPerBlock>false</ExecuteRemediationScriptPerBlock>
          <ExecuteScriptInConfigMode>false</ExecuteScriptInConfigMode>
        </PolicyRule>
        <PolicyRule>
          <MultiLineRulePatterns>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Regex</PatternType>
              <Condition />
              <Pattern />
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
          </MultiLineRulePatterns>
          <RuleId>81c7a339-0b61-41ca-b259-bb306761d274</RuleId>
          <RuleName>CSCO-IOS-RTR-CISC-RT-000350 - ACL</RuleName>
          <Comments>The Cisco perimeter router must be configured to block all packets with any IP options.</Comments>
          <Grouping>CSCO-IOS-RTR</Grouping>
          <RemediateScript>Check Content:  
This requirement is not applicable for the DODIN Backbone.

Review the router configuration to determine if it will block all packets with IP options.

ip access-list extended EXTERNAL_ACL
 permit tcp any any established
deny ip any any option any-options
permit …
 …
 … 
 …
deny ip any any log-input

If the router is not configured to drop all packets with IP options, this is a finding.

Fix Text: This requirement is not applicable for the DODIN Backbone.

Configure the router to drop all packets with IP options.

R1(config)#ip access-list extended EXTERNAL_ACL
R1(config-ext-nacl)#15 deny ip any any option any-options  

CCI: CCI-002403
_____________________________________________________________</RemediateScript>
          <ConfigBlockStart />
          <ConfigBlockEnd />
          <ConfigBlockPatternType>Like</ConfigBlockPatternType>
          <ConfigBlockMustExist>false</ConfigBlockMustExist>
          <PatternType>Like</PatternType>
          <PatternMustExist>true</PatternMustExist>
          <AdvancedMode>false</AdvancedMode>
          <ErrorLevel>1</ErrorLevel>
          <SimplePatternText>deny ip any any option any-options  </SimplePatternText>
          <ExecuteScriptAutomatically>false</ExecuteScriptAutomatically>
          <Owner>admin</Owner>
          <RemediateScriptType>CLI</RemediateScriptType>
          <ExecuteRemediationScriptPerBlock>false</ExecuteRemediationScriptPerBlock>
          <ExecuteScriptInConfigMode>false</ExecuteScriptInConfigMode>
        </PolicyRule>
        <PolicyRule>
          <MultiLineRulePatterns>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition />
              <Pattern>ip access-list extended INGRESS_FILTER</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>permit tcp any any established</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>permit tcp host x.11.1.1 eq bgp host x.11.1.2</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>permit tcp host x.11.1.1 host x.11.1.2 eq bgp</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>permit tcp any host x.11.1.5 eq www</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>permit icmp host x.11.1.1 host x.11.1.2 echo</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>permit icmp any any echo-reply</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>deny ip any any log-input</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
          </MultiLineRulePatterns>
          <RuleId>d6111a21-593f-4665-968e-c8ce25f7bf5a</RuleId>
          <RuleName>CSCO-IOS-RTR-CISC-RT-000210 - ACL</RuleName>
          <Comments>The Cisco router must be configured to produce audit records containing information to establish where the events occurred.</Comments>
          <Grouping>CSCO-IOS-RTR</Grouping>
          <RemediateScript>Check Content:  
Review the router configuration to verify that events are logged containing information to establish where the events occurred as shown in the example below.

ip access-list extended INGRESS_FILTER
 permit tcp any any established
 permit tcp host x.11.1.1 eq bgp host x.11.1.2
 permit tcp host x.11.1.1 host x.11.1.2 eq bgp
 permit tcp any host x.11.1.5 eq www
 permit icmp host x.11.1.1 host x.11.1.2 echo
 permit icmp any any echo-reply
…
 …
 …
deny ip any any log-input

Note: When the log-input parameter is configured on deny statements, the log record will contain the interface where ingress packet has been dropped.

If the router is not configured to produce audit records containing information to establish to establish where the events occurred, this is a finding.

Fix Text: Configure the router to log events containing information to establish where the events occurred as shown in the example below.

R5(config)#ip access-list extended INGRESS_FILTER
…
…
…
R5(config-ext-nacl)#deny ip any any log-input  

CCI: CCI-000132
_____________________________________________________________
</RemediateScript>
          <ConfigBlockStart />
          <ConfigBlockEnd />
          <ConfigBlockPatternType>Like</ConfigBlockPatternType>
          <ConfigBlockMustExist>false</ConfigBlockMustExist>
          <PatternType>Like</PatternType>
          <PatternMustExist>true</PatternMustExist>
          <AdvancedMode>true</AdvancedMode>
          <ErrorLevel>1</ErrorLevel>
          <SimplePatternText />
          <ExecuteScriptAutomatically>false</ExecuteScriptAutomatically>
          <Owner>admin</Owner>
          <RemediateScriptType>CLI</RemediateScriptType>
          <ExecuteRemediationScriptPerBlock>false</ExecuteRemediationScriptPerBlock>
          <ExecuteScriptInConfigMode>false</ExecuteScriptInConfigMode>
        </PolicyRule>
        <PolicyRule>
          <MultiLineRulePatterns>
            <MultiLineRulePattern>
              <EndBracket>)</EndBracket>
              <PatternType>Like</PatternType>
              <Condition />
              <Pattern>External Facing Interface</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket>(</BeginBracket>
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>OR</Condition>
              <Pattern>ip access-list extended EXTERNAL_ACL</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket>(</BeginBracket>
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>permit tcp host x.11.1.1 eq bgp host x.11.1.2</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>permit tcp host x.11.1.1 host x.11.1.2 eq bgp
</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>permit icmp host x.11.1.1 host x.11.1.2 echo
</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>permit icmp host x.11.1.1 host x.11.1.2 echo-reply
</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>deny ip any host x.11.1.1 log-input</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket>)</EndBracket>
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>deny ip any any log-input
</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket>)</EndBracket>
              <PatternType>Like</PatternType>
              <Condition>OR</Condition>
              <Pattern>Internal Facing Interface
</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket>(</BeginBracket>
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>OR</Condition>
              <Pattern>ip access-list extended INTERNAL_ACL</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket>(</BeginBracket>
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>permit icmp any any</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>permit ospf host 10.1.12.1 host 10.1.12.2</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>permit tcp 10.2.1.0 0.0.0.255 host 10.1.12.2 eq 22</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>permit tcp 10.2.1.0 0.0.0.255 host 10.1.12.2 eq tacacs</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>permit udp 10.2.1.0 0.0.0.255 host 10.1.12.2 eq snmp</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>permit udp 10.2.1.0 0.0.0.255 host 10.1.12.2 eq ntp</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket>)</EndBracket>
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>deny ip any host 10.1.12.2 log-input</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
          </MultiLineRulePatterns>
          <RuleId>3567a3ad-c818-454c-9505-cdae9a268225</RuleId>
          <RuleName>CSCO-IOS-RTR-CISC-RT-000130 - ACL</RuleName>
          <Comments>The Cisco router must be configured to restrict traffic destined to itself.</Comments>
          <Grouping>CSCO-IOS-RTR</Grouping>
          <RemediateScript>Check Content:  
Review the external and internal Access Control Lists (ACLs) to verify that the router is configured to only allow specific management and control plane traffic from specific sources destined to itself.

Step 1: Verify ACLs has been configured as shown in the example below that matches expected control plane and management plane traffic. With the exception of ICMP, all other traffic destined to the router should be dropped.

ip access-list extended EXTERNAL_ACL
 permit tcp host x.11.1.1 eq bgp host x.11.1.2
 permit tcp host x.11.1.1 host x.11.1.2 eq bgp
 permit icmp host x.11.1.1 host x.11.1.2 echo
 permit icmp host x.11.1.1 host x.11.1.2 echo-reply
 deny ip any host x.11.1.1 log-input
 permit …
 …
 …
 …
deny ip any any log-input

ip access-list extended INTERNAL_ACL
 permit icmp any any
 permit ospf host 10.1.12.1 host 10.1.12.2
 permit tcp 10.2.1.0 0.0.0.255 host 10.1.12.2 eq 22
 permit tcp 10.2.1.0 0.0.0.255 host 10.1.12.2 eq tacacs
 permit udp 10.2.1.0 0.0.0.255 host 10.1.12.2 eq snmp
 permit udp 10.2.1.0 0.0.0.255 host 10.1.12.2 eq ntp
 deny ip any host 10.1.12.2 log-input
 permit …
 …
 …
 …
deny ip any any log-input

Note: For the internal ACL example, all routers within the hypothetical network (10.1.0.0/16) have been configured to use the loopback address to source all management traffic (not shown); hence, the loopbacks are the only allowable destination address for management traffic. In addition, all management traffic destined to the router must originate from the management network (10.2.1.0/24). With the exception of link-local control plane traffic and ICMP, all other traffic destined to any physical interface address will be dropped.

Step 2: Verify that the ACL has been applied to the appropriate interface as shown in the example below.

interface GigabitEthernet0/2
 ip address x.11.1.2 255.255.255.254
 ip access-group EXTERNAL_ACL in
interface GigabitEthernet0/3
 ip address 10.1.12.2 255.255.255.0
 ip access-group INTERNAL_ACL in

If the router is not configured to restrict traffic destined to itself, this is a finding.

Fix Text: Step 1: Configure the ACL for any external interfaces as shown in the example.

R1(config)#ip access-list extended EXTERNAL_ACL
R1(config-ext-nacl)#permit tcp host x.11.1.1 eq bgp host x.11.1.2 
R1(config-ext-nacl)#permit tcp host x.11.1.1 host x.11.1.2 eq bgp
R1(config-ext-nacl)#permit icmp host x.11.1.1 host x.11.1.2 echo
R1(config-ext-nacl)#permit icmp host x.11.1.1 host x.11.1.2 echo-reply
R1(config-ext-nacl)#deny ip any host x.11.1.1 log-input
R1(config-ext-nacl)#permit …
…
…
…
R1(config-ext-nacl)#deny ip any any log-input

Step 2: Configure the ACL for any external interfaces as shown in the example.

R1(config)#ip access-list extended INTERNAL_ACL
R1(config-ext-nacl)#permit ospf host 10.1.12.1 host 10.1.12.2
R1(config-ext-nacl)#permit tcp 10.2.1.0 0.0.0.255 host 10.1.12.2 eq 22
R1(config-ext-nacl)#permit tcp 10.2.1.0 0.0.0.255 host 10.1.12.2 eq tacacs
R1(config-ext-nacl)#permit udp 10.2.1.0 0.0.0.255 host 10.1.12.2 eq snmp
R1(config-ext-nacl)#permit udp 10.2.1.0 0.0.0.255 host 10.1.12.2 eq ntp
R1(config-ext-nacl)#deny ip any host 10.1.12.2 log-input
R1(config-ext-nacl)#permit …
…
…
…
R1(config-ext-nacl)#permit ip any any log-input
R1(config-ext-nacl)#exit

Note: best practice is to configure the ACL statements relative to traffic destined to the router first followed by ACL statements for transit traffic.

Step 3: Apply the ACLs to the appropriate interface as shown in the example below.

R1(config)#int g0/2
R1(config-if)#ip access-group EXTERNAL_ACL in
R1(config)#int g0/3
R1(config-if)#ip access-group INTERNAL_ACL in  

CCI: CCI-001097
_____________________________________________________________
</RemediateScript>
          <ConfigBlockStart />
          <ConfigBlockEnd />
          <ConfigBlockPatternType>Like</ConfigBlockPatternType>
          <ConfigBlockMustExist>false</ConfigBlockMustExist>
          <PatternType>Like</PatternType>
          <PatternMustExist>true</PatternMustExist>
          <AdvancedMode>true</AdvancedMode>
          <ErrorLevel>2</ErrorLevel>
          <SimplePatternText>ip access-group EXTERNAL_ACL in</SimplePatternText>
          <ExecuteScriptAutomatically>false</ExecuteScriptAutomatically>
          <Owner>admin</Owner>
          <RemediateScriptType>CLI</RemediateScriptType>
          <ExecuteRemediationScriptPerBlock>false</ExecuteRemediationScriptPerBlock>
          <ExecuteScriptInConfigMode>false</ExecuteScriptInConfigMode>
        </PolicyRule>
        <PolicyRule>
          <MultiLineRulePatterns>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition />
              <Pattern>ip access-list extended INGRESS_FILTER</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>permit tcp any any established</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>permit tcp host x.11.1.1 eq bgp host x.11.1.2</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>permit tcp host x.11.1.1 host x.11.1.2 eq bgp</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>permit tcp any host x.11.1.5 eq www</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>permit icmp host x.11.1.1 host x.11.1.2 echo</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>permit icmp any any echo-reply</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>deny ip any any log</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
          </MultiLineRulePatterns>
          <RuleId>4a6140df-2b3a-40a6-ae47-dcb7e93b767d</RuleId>
          <RuleName>CSCO-IOS-RTR-CISC-RT-000200 - ACL</RuleName>
          <Comments>The Cisco router must be configured to log all packets that have been dropped at interfaces via an ACL.</Comments>
          <Grouping>CSCO-IOS-RTR</Grouping>
          <RemediateScript>Check Content:  
Review all Access Control Lists(ACLs) used to filter traffic and verify that packets being dropped are logged as shown in the configuration below.

ip access-list extended INGRESS_FILTER
 permit tcp any any established
 permit tcp host x.11.1.1 eq bgp host x.11.1.2
 permit tcp host x.11.1.1 host x.11.1.2 eq bgp
 permit tcp any host x.11.1.5 eq www
 permit icmp host x.11.1.1 host x.11.1.2 echo
 permit icmp any any echo-reply
…
 …
 …
deny ip any any log

If packets being dropped at interfaces are not logged, this is a finding.

Fix Text: Configure ACLs to log packets that are dropped as shown in the example below.

R5(config)#ip access-list extended INGRESS_FILTER
…
…
…
R5(config-ext-nacl)#deny ip any any log  

CCI: CCI-000134
_____________________________________________________________
</RemediateScript>
          <ConfigBlockStart />
          <ConfigBlockEnd />
          <ConfigBlockPatternType>Like</ConfigBlockPatternType>
          <ConfigBlockMustExist>false</ConfigBlockMustExist>
          <PatternType>Like</PatternType>
          <PatternMustExist>true</PatternMustExist>
          <AdvancedMode>true</AdvancedMode>
          <ErrorLevel>0</ErrorLevel>
          <SimplePatternText />
          <ExecuteScriptAutomatically>false</ExecuteScriptAutomatically>
          <Owner>admin</Owner>
          <RemediateScriptType>CLI</RemediateScriptType>
          <ExecuteRemediationScriptPerBlock>false</ExecuteRemediationScriptPerBlock>
          <ExecuteScriptInConfigMode>false</ExecuteScriptInConfigMode>
        </PolicyRule>
        <PolicyRule>
          <MultiLineRulePatterns>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition />
              <Pattern>permit tcp any any established</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
          </MultiLineRulePatterns>
          <RuleId>97eee1ed-d01c-4c24-9f10-de88a60a6ecc</RuleId>
          <RuleName>CSCO-IOS-RTR-CISC-RT-000260 - ACL</RuleName>
          <Comments>The Cisco perimeter router must be configured to only allow incoming communications from authorized sources to be routed to authorized destinations.</Comments>
          <Grouping>CSCO-IOS-RTR</Grouping>
          <RemediateScript>Check Content:  
This requirement is not applicable for the DODIN Backbone.

Review the router configuration to determine if the router allows only incoming communications from authorized sources to be routed to authorized destinations. The hypothetical example below allows inbound NTP from server x.1.12.9 only to host x.12.1.21.

ip access-list extended FILTER_PERIMETER
 permit tcp any any established
…
 …
 …
permit udp host x.12.1.9 host x.12.1.21 eq ntp
 deny ip any any log-input

If the router does not restrict incoming communications to allow only authorized sources and destinations, this is a finding.

Fix Text: This requirement is not applicable for the DODIN Backbone.

Configure the router to allow only incoming communications from authorized sources to be routed to authorized destinations. 

R1(config)#ip access-list extended FILTER_PERIMETER
R1(config-ext-nacl)#nn permit udp host x.12.1.9 host x.12.1.21 eq ntp
R1(config-ext-nacl)#end

  

CCI: CCI-002403
_____________________________________________________________</RemediateScript>
          <ConfigBlockStart>ip access-list extended FILTER_PERIMETER</ConfigBlockStart>
          <ConfigBlockEnd>!</ConfigBlockEnd>
          <ConfigBlockPatternType>Like</ConfigBlockPatternType>
          <ConfigBlockMustExist>false</ConfigBlockMustExist>
          <PatternType>Like</PatternType>
          <PatternMustExist>true</PatternMustExist>
          <AdvancedMode>true</AdvancedMode>
          <ErrorLevel>1</ErrorLevel>
          <SimplePatternText />
          <ExecuteScriptAutomatically>false</ExecuteScriptAutomatically>
          <Owner>admin</Owner>
          <RemediateScriptType>CLI</RemediateScriptType>
          <ExecuteRemediationScriptPerBlock>false</ExecuteRemediationScriptPerBlock>
          <ExecuteScriptInConfigMode>false</ExecuteScriptInConfigMode>
        </PolicyRule>
        <PolicyRule>
          <MultiLineRulePatterns>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition />
              <Pattern>deny tcp any any eq tacacs log-input</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>deny tcp any any eq 22 log-input</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>deny udp any any eq snmp log-input</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>deny udp any any eq snmptrap log-input</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>deny udp any any eq syslog log-input</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>permit tcp any any eq www log-input</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>deny ip any any log-input</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
          </MultiLineRulePatterns>
          <RuleId>bf8f9a56-d64a-400c-a705-ea005e173d67</RuleId>
          <RuleName>CSCO-IOS-RTR-CISC-RT-000390 - ACL</RuleName>
          <Comments>The Cisco perimeter router must be configured to block all outbound management traffic.</Comments>
          <Grouping>CSCO-IOS-RTR</Grouping>
          <RemediateScript>Check Content:  
This requirement is not applicable for the DODIN Backbone.

The perimeter router of the managed network must be configured with an outbound ACL on the egress interface to block all management traffic as shown in the example below.

Step 1: Verify that all external interfaces have been configured with an outbound ACL as shown in the example below.

interface GigabitEthernet0/2
 description link to DISN
 ip address x.11.1.2 255.255.255.254
 ip access-group EXTERNAL_ACL_OUTBOUND out

Step 2: Verify that the outbound ACL discards management traffic as shown in the example below.

ip access-list extended EXTERNAL_ACL_OUTBOUND
 deny tcp any any eq tacacs log-input
 deny tcp any any eq 22 log-input
 deny udp any any eq snmp log-input
 deny udp any any eq snmptrap log-input
 deny udp any any eq syslog log-input
 permit tcp any any eq www log-input
 deny ip any any log-input

If management traffic is not blocked at the perimeter, this is a finding.

Fix Text: This requirement is not applicable for the DODIN Backbone.

Configure the perimeter router of the managed network with an outbound ACL on the egress interface to block all management traffic.

Step 1: Configure an ACL to block egress management traffic.

R5(config)#ip access-list extended EXTERNAL_ACL_OUTBOUND
R5(config-ext-nacl)#deny tcp any any eq tacacs log-input
R5(config-ext-nacl)#deny tcp any any eq 22 log-input
R5(config-ext-nacl)#deny udp any any eq snmp log-input
R5(config-ext-nacl)#deny udp any any eq snmptrap log-input
R5(config-ext-nacl)#deny udp any any eq syslog log-input
R5(config-ext-nacl)#permit tcp any any eq www
R5(config-ext-nacl)#deny ip any any log-input
R5(config-ext-nacl)#exit

Note: Permit commands would be configured to allow applicable outbound traffic. The example above is allowing web traffic.

Step 2: Configure the external interfaces with the outbound ACL.

R1(config)#int g0/2
R1(config-if)#ip access-group EXTERNAL_ACL_OUTBOUND out  

CCI: CCI-001097
_____________________________________________________________</RemediateScript>
          <ConfigBlockStart>ip access-list extended EXTERNAL_ACL_OUTBOUND</ConfigBlockStart>
          <ConfigBlockEnd>!</ConfigBlockEnd>
          <ConfigBlockPatternType>Like</ConfigBlockPatternType>
          <ConfigBlockMustExist>false</ConfigBlockMustExist>
          <PatternType>Like</PatternType>
          <PatternMustExist>true</PatternMustExist>
          <AdvancedMode>true</AdvancedMode>
          <ErrorLevel>1</ErrorLevel>
          <SimplePatternText />
          <ExecuteScriptAutomatically>false</ExecuteScriptAutomatically>
          <Owner>admin</Owner>
          <RemediateScriptType>CLI</RemediateScriptType>
          <ExecuteRemediationScriptPerBlock>false</ExecuteRemediationScriptPerBlock>
          <ExecuteScriptInConfigMode>false</ExecuteScriptInConfigMode>
        </PolicyRule>
        <PolicyRule>
          <MultiLineRulePatterns>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition />
              <Pattern>ip access-list extended FILTER_SERVER_TRAFFIC</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>permit tcp any 10.1.23.0 0.0.0.255 eq lpd 631 9100</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>permit tcp any 10.1.24.0 0.0.0.255 eq 1433 1434 4022</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>permit icmp any any</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>permit ospf any any</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
            <MultiLineRulePattern>
              <EndBracket />
              <PatternType>Like</PatternType>
              <Condition>AND</Condition>
              <Pattern>deny ip any any</Pattern>
              <Criteria>true</Criteria>
              <BeginBracket />
            </MultiLineRulePattern>
          </MultiLineRulePatterns>
          <RuleId>a3b124ec-3094-4270-92d2-fe04c2534382</RuleId>
          <RuleName>CSCO-IOS-RTR-CISC-RT-000010 - ACL</RuleName>
          <Comments>The Cisco router must be configured to enforce approved authorizations for controlling the flow of information within the network based on organization-defined information flow control policies.</Comments>
          <Grouping>CSCO-IOS-RTR</Grouping>
          <RemediateScript>Check Content:  
This requirement is not applicable for the DODIN Backbone.

Review the router configuration to verify that Access Control Lists (ACLs) are configured to allow or deny traffic for specific source and destination addresses as well as ports and protocols. For example, the configuration below will allow only printer traffic into subnet 10.1.23.0/24 and SQL traffic into subnet 10.1.24.0/24. ICMP is allowed for troubleshooting and OSPF is the routing protocol used within the network.

interface GigabitEthernet1/1
 description link to core
 ip address 10.1.12.2 255.255.255.0
 ip access-group FILTER_SERVER_TRAFFIC in
…
…
…
ip access-list extended FILTER_SERVER_TRAFFIC
 permit tcp any 10.1.23.0 0.0.0.255 eq lpd 631 9100
 permit tcp any 10.1.24.0 0.0.0.255 eq 1433 1434 4022
 permit icmp any any
 permit ospf any any
 deny ip any any

If the router is not configured to enforce approved authorizations for controlling the flow of information within the network based on organization-defined information flow control policies, this is a finding.

Fix Text: This requirement is not applicable for the DODIN Backbone.

Configure ACLs to allow or deny traffic for specific source and destination addresses as well as ports and protocols between various subnets as required. The commands used below were used to create the configuration as shown in the check content.

R5(config)#ip access-list extended FILTER_SERVER_TRAFFIC
R5(config-ext-nacl)#permit tcp any 10.1.23.0 0.0.0.255 eq 515 631 9100
R5(config-ext-nacl)#permit tcp any 10.1.24.0 0.0.0.255 eq 1433 1434 4022
R5(config-ext-nacl)#permit icmp any any
R5(config-ext-nacl)#permit ospf any any
R5(config-ext-nacl)#deny ip any any
R5(config-ext-nacl)#exit
R5(config)#interface GigabitEthernet1/1
R5(config-if)#ip access-group FILTER_SERVER_TRAFFIC in  

CCI: CCI-001368
______________</RemediateScript>
          <ConfigBlockStart />
          <ConfigBlockEnd />
          <ConfigBlockPatternType>Like</ConfigBlockPatternType>
          <ConfigBlockMustExist>false</ConfigBlockMustExist>
          <PatternType>Like</PatternType>
          <PatternMustExist>true</PatternMustExist>
          <AdvancedMode>true</AdvancedMode>
          <ErrorLevel>1</ErrorLevel>
          <SimplePatternText />
          <ExecuteScriptAutomatically>false</ExecuteScriptAutomatically>
          <Owner>admin</Owner>
          <RemediateScriptType>CLI</RemediateScriptType>
          <ExecuteRemediationScriptPerBlock>false</ExecuteRemediationScriptPerBlock>
          <ExecuteScriptInConfigMode>false</ExecuteScriptInConfigMode>
        </PolicyRule>
      </AssignedPolicyRules>
      <Grouping>CSCO-IOS-RTR</Grouping>
      <Comments />
      <PolicyName>CSCO-IOS-RTR - ACL</PolicyName>
    </Policy>
  </AssignedPolicies>
  <ReportStatus>Enabled</ReportStatus>
</PolicyReport>